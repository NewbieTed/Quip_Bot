plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.quip'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation' // For @Valid annotations

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.5.6'
    implementation 'org.flywaydb:flyway-core:11.10.1'
    implementation 'org.flywaydb:flyway-database-postgresql:11.10.1'

    // Utilities
    implementation 'me.paulschwarz:spring-dotenv:3.0.0' // For .env file support

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Code Generation & Mappers
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' // For Lombok and MapStruct integration
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Validation (explicitly added for clarity, though starter-validation pulls some)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit.platform:junit-platform-bom:1.10.2')
}

// MapStruct annotation processor configuration
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=spring'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}