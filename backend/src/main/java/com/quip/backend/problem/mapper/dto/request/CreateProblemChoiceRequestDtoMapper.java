package com.quip.backend.problem.mapper.dto.request;

import com.quip.backend.problem.dto.request.CreateProblemChoiceRequestDto;
import com.quip.backend.problem.model.ProblemChoice;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.Mappings;

/**
 * MapStruct mapper interface for converting CreateProblemChoiceRequestDto to ProblemChoice entity.
 * <p>
 * This interface defines mapping rules for transforming problem choice request DTOs into domain entities.
 * It uses MapStruct to automatically generate the implementation at compile time.
 * </p>
 */
@Mapper(componentModel = "spring")
public interface CreateProblemChoiceRequestDtoMapper {

    /**
     * Converts a CreateProblemChoiceRequestDto to a ProblemChoice entity.
     * <p>
     * This mapping:
     * - Maps basic fields like choiceText, mediaFileId, and isCorrect directly
     * - Ignores id (will be generated by the database)
     * - Ignores problemId (set explicitly in the service layer)
     * - Ignores audit fields (createdAt, updatedAt, createdBy, updatedBy)
     * </p>
     *
     * @param dto The DTO to convert
     * @return A ProblemChoice entity with mapped values
     */
    @Mappings({
            @Mapping(target = "id", ignore = true),
            @Mapping(target = "createdAt", ignore = true),
            @Mapping(target = "updatedAt", ignore = true),
            @Mapping(target = "createdBy", ignore = true),
            @Mapping(target = "updatedBy", ignore = true),
            @Mapping(target = "problemId", ignore = true) // will be set explicitly in service
    })
    ProblemChoice toProblemChoice(CreateProblemChoiceRequestDto dto);
}