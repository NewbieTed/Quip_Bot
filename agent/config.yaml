# Agent Configuration
app:
  name: "agent"
  version: "1.0.0"
  description: "Agent Service for Quip Bot"

# Backend API Configuration
backend:
  url: "http://quip-backend-app:8080"  # Can be overridden by BACKEND_URL env var

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  handlers:
    - console
    - file
  file_path: "logs/agent.log"

# OpenAI Configuration
openai:
  model: "gpt-4o-mini"
  temperature: 0
  max_tokens: 4000

# MCP Client Configuration (optional - can be empty for local tools only)
mcp:
  enabled: true  # Set to false to use local tools only
  servers:
    QuipMCPServer:
      # URL configured via environment variables for security
      # Use MCP_SERVER_URL_QUIPMCPSERVER or fallback to MCP_SERVER_URL
      transport: "streamable_http"
      reconnect_attempts: 3
      reconnect_delay: 5
    # Add more MCP servers here as needed
    # WeatherMCPServer:
    #   # URL configured via MCP_SERVER_URL_WEATHERMCPSERVER env var
    #   transport: "streamable_http"
    #   reconnect_attempts: 3
    #   reconnect_delay: 5

# Agent Configuration
agent:
  prompts_dir: "src/agent/prompts"
  prompts:
    main_system: "main_system_prompt.txt"
    human_confirmation: "human_confirmation_prompt.txt"
    progress_report: "progress_report_prompt.txt"
  max_iterations: 10
  stream_mode:
    - "updates"
    - "messages" 
    - "custom"

# Redis Configuration
redis:
  host: "localhost"  # Can be overridden by REDIS_HOST env var
  port: 6379         # Can be overridden by REDIS_PORT env var
  db: 0              # Can be overridden by REDIS_DB env var
  password: null     # Can be overridden by REDIS_PASSWORD env var
  retry:
    max_attempts: 3    # Can be overridden by REDIS_RETRY_MAX_ATTEMPTS env var
    base_delay: 1.0    # Can be overridden by REDIS_RETRY_BASE_DELAY env var
    max_delay: 30.0    # Can be overridden by REDIS_RETRY_MAX_DELAY env var

# Memory Configuration
memory:
  type: "in_memory"
  checkpoint_interval: 100

# Tool Synchronization Configuration
tool_sync:
  enabled: true
  discovery_on_startup: true
  # HTTP server configuration for sync recovery
  http_server:
    enabled: ${TOOL_SYNC_HTTP_ENABLED:true}                # Enable/disable HTTP sync endpoints
    host: ${TOOL_SYNC_HTTP_HOST:0.0.0.0}                   # HTTP server host
    port: ${TOOL_SYNC_HTTP_PORT:5001}                      # HTTP server port
    timeout: ${TOOL_SYNC_HTTP_TIMEOUT:10}                  # Request timeout in seconds
    # Tool discovery configuration for resync requests
    discovery:
      timeout: ${TOOL_DISCOVERY_TIMEOUT:10}                # Tool discovery timeout in seconds
      retry_attempts: ${TOOL_DISCOVERY_RETRY_ATTEMPTS:2}   # Retry attempts for failed discovery
      retry_delay: ${TOOL_DISCOVERY_RETRY_DELAY:1}         # Delay between retries in seconds