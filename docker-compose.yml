services:
  quip-db:
    image: postgres:16
    container_name: quip-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - quip_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - quip-network

  quip-backend-app:
    build: ./backend
    container_name: quip-backend-app
    ports:
      - "8080:8080"
    environment:
      DB_HOST: quip-db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      AGENT_URL: ${AGENT_URL}
    depends_on:
      quip-db:
        condition: service_healthy
    command: java -jar /app/build/libs/app.jar
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - quip-network

  quip-agent:
    build: ./agent
    container_name: quip-agent
    ports:
      - "5001:5000"
    environment:
      # MCP Server Configuration (Multi-server support)
      MCP_SERVER_URL_QUIPMCPSERVER: ${MCP_SERVER_URL_QUIPMCPSERVER}
      MCP_SERVER_URL: ${MCP_SERVER_URL}  # Global fallback
      BACKEND_URL: http://quip-backend-app:8080
      # Add additional MCP server URLs as needed:
      # MCP_SERVER_URL_WEATHERMCPSERVER: ${MCP_SERVER_URL_WEATHERMCPSERVER}
    depends_on:
      quip-backend-app:
        condition: service_healthy
    networks:
      - quip-network

  quip-mcp-server:
    build: ./mcp-server
    container_name: quip-mcp-server
    ports:
      - "8000:8000"
    environment:
      HOST: 0.0.0.0
      PORT: 8000
    depends_on:
      quip-agent:
        condition: service_started
    networks:
      - quip-network

  quip-frontend:
    build: ./frontend
    container_name: quip-frontend
    ports:
      - "3000:3000"
    environment:
      BACKEND_URL: ${BACKEND_URL}
    depends_on:
      quip-backend-app:
        condition: service_started
    networks:
      - quip-network

volumes:
  quip_db_data:

networks:
  quip-network: {}